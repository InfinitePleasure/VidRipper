# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QWidget, QFileDialog
import EventListener


class Ui_MainWindow(QWidget):
    def setupUi(self, main_window):
        main_window.setObjectName("MainWindow")
        main_window.resize(615, 291)
        self.centralwidget = QtWidgets.QWidget(main_window)
        self.centralwidget.setObjectName("centralwidget")
        self.exportBtn = QtWidgets.QPushButton(self.centralwidget)
        self.exportBtn.setGeometry(QtCore.QRect(420, 180, 181, 61))
        font = QtGui.QFont()
        font.setFamily("Fixedsys")
        self.exportBtn.setFont(font)
        self.exportBtn.setObjectName("pushButton")
        self.exportBtn.clicked.connect(EventListener.export)
        self.importBtn = QtWidgets.QPushButton(self.centralwidget)
        self.importBtn.setGeometry(QtCore.QRect(20, 10, 191, 251))
        font = QtGui.QFont()
        font.setFamily("Fixedsys")
        self.importBtn.setFont(font)
        self.importBtn.setObjectName("pushButton_2")
        self.importBtn.clicked.connect(EventListener.import_)
        self.spinBox = QtWidgets.QSpinBox(self.centralwidget)
        self.spinBox.setGeometry(QtCore.QRect(270, 120, 181, 22))
        font = QtGui.QFont()
        font.setFamily("Arial")
        self.spinBox.setFont(font)
        self.spinBox.setObjectName("spinBox")
        self.spinBox.valueChanged.connect(self.val)
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(270, 90, 101, 31))
        self.label.setObjectName("label")
        self.exportAll = QtWidgets.QCheckBox(self.centralwidget)
        self.exportAll.setGeometry(QtCore.QRect(290, 0, 331, 41))
        self.exportAll.setObjectName("checkBox")
        self.exportAll.clicked.connect(EventListener.all_func)
        self.exportMult = QtWidgets.QCheckBox(self.centralwidget)
        self.exportMult.setGeometry(QtCore.QRect(290, 32, 331, 41))
        self.exportMult.setObjectName("checkBox_2")
        self.exportMult.clicked.connect(EventListener.mult_func)
        main_window.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(main_window)
        self.statusbar.setObjectName("statusbar")
        main_window.setStatusBar(self.statusbar)

        self.retranslateUi(main_window)
        QtCore.QMetaObject.connectSlotsByName(main_window)
        main_window.show()

    def retranslateUi(self, main_window):
        _translate = QtCore.QCoreApplication.translate
        main_window.setWindowTitle(_translate("MainWindow", "VidRipper"))
        self.exportBtn.setText(_translate("MainWindow", "Exporter l\'image"))
        self.importBtn.setText(_translate("MainWindow", "Importer une vidéo"))
        self.label.setText(_translate("MainWindow", "Numéro de l\'image"))
        self.exportAll.setText(_translate("MainWindow", "Extraire toutes les images de la vidéo\n"
                                                        "(Cela créera un dossier dans le répertoire de destination choisi)"))
        self.exportMult.setText(_translate("MainWindow", "Extraire les / une image de plussieurs vidéo"))

    def val(self):
        EventListener.setIndex(self.spinBox.value())


def openFileNameDialog():
    options = QFileDialog.Options()
    options |= QFileDialog.DontUseNativeDialog
    fileName, _ = QFileDialog.getOpenFileName(None, "QFileDialog.getOpenFileName()", "",
                                             "All Files (*);;Vidéo Files (*.mp4 *.mov *.avi)", options=options)
    return fileName


def openFileNamesDialog():
    options = QFileDialog.Options()
    options |= QFileDialog.DontUseNativeDialog
    files, _ = QFileDialog.getOpenFileNames(None, "QFileDialog.getOpenFileNames()", "",
                                         "All Files (*);;Vidéo Files (*.mp4 *.mov *.avi)", options=options)
    return files
